availability:
  description: A list of MQTT topics subscribed to receive availability (online/offline)
    updates. Must not be used together with `availability_topic`.
  keys:
    payload_available:
      default: online
      description: The payload that represents the available state.
      required: false
      type: string
    payload_not_available:
      default: offline
      description: The payload that represents the unavailable state.
      required: false
      type: string
    topic:
      description: An MQTT topic subscribed to receive availability (online/offline)
        updates.
      required: true
      type: string
    value_template:
      description: Defines a [template](/docs/configuration/templating/#using-value-templates-with-mqtt)
        to extract the device's availability from the `topic`. To determine the devices's
        availability, the result of this template will be compared to `payload_available`
        and `payload_not_available`.
      required: false
      type: template
  required: false
  type: list
availability_mode:
  default: latest
  description: When `availability` is configured, this controls the conditions needed
    to set the entity to `available`. Valid entries are `all`, `any`, and `latest`.
    If set to `all`, `payload_available` must be received on all configured availability
    topics before the entity is marked as online. If set to `any`, `payload_available`
    must be received on at least one configured availability topic before the entity
    is marked as online. If set to `latest`, the last `payload_available` or `payload_not_available`
    received on any configured availability topic controls the availability.
  required: false
  type: string
availability_template:
  description: Defines a [template](/docs/configuration/templating/#using-value-templates-with-mqtt)
    to extract the device's availability from the `availability_topic`. To determine
    the devices's availability, the result of this template will be compared to `payload_available`
    and `payload_not_available`.
  required: false
  type: template
availability_topic:
  description: The MQTT topic subscribed to receive birth and LWT messages from the
    MQTT valve device. If an `availability` topic is not defined, the valve availability
    state will always be `available`. If an `availability` topic is defined, the valve
    availability state will be `unavailable` by default. Must not be used together
    with `availability`.
  required: false
  type: string
command_template:
  description: Defines a [template](/docs/configuration/templating/#using-command-templates-with-mqtt)
    to generate the payload to send to `command_topic`.
  required: false
  type: template
command_topic:
  description: The MQTT topic to publish commands to control the valve. The value
    sent can be a value defined by `payload_open`, `payload_close` or `payload_stop`.
    If `reports_position` is set to `true`, a numeric value will be published instead.
  required: false
  type: string
device:
  description: Information about the device this valve is a part of to tie it into
    the [device registry](https://developers.home-assistant.io/docs/en/device_registry_index.html).
    Only works when [`unique_id`](#unique_id) is set. At least one of the identifiers
    or connections must be present to identify the device.
  keys:
    configuration_url:
      description: A link to the webpage that can manage the configuration of this
        device. Can be either an `http://`, `https://` or an internal `homeassistant://`
        URL.
      required: false
      type: string
    connections:
      description: 'A list of connections of the device to the outside world as a
        list of tuples `[connection_type, connection_identifier]`. For example, the
        MAC address of a network interface: `"connections": [["mac", "02:5b:26:a8:dc:12"]]`.'
      required: false
      type: list
    hw_version:
      description: The hardware version of the device.
      required: false
      type: string
    identifiers:
      description: A list of IDs that uniquely identify the device. For example, a
        serial number.
      required: false
      type:
      - list
      - string
    manufacturer:
      description: The manufacturer of the device.
      required: false
      type: string
    model:
      description: The model of the device.
      required: false
      type: string
    model_id:
      description: The model identifier of the device.
      required: false
      type: string
    name:
      description: The name of the device.
      required: false
      type: string
    serial_number:
      description: The serial number of the device.
      required: false
      type: string
    suggested_area:
      description: Suggest an area if the device isnâ€™t in one yet.
      required: false
      type: string
    sw_version:
      description: The firmware version of the device.
      required: false
      type: string
    via_device:
      description: Identifier of a device that routes messages between this device
        and Home Assistant. Examples of such devices are hubs, or parent devices of
        a sub-device. This is used to show device topology in Home Assistant.
      required: false
      type: string
  required: false
  type: map
device_class:
  description: Sets the [class of the device](/integrations/valve/#device_class),
    changing the device state and icon that is displayed on the frontend. The `device_class`
    can be `null`.
  required: false
  type: string
enabled_by_default:
  default: true
  description: Flag which defines if the entity should be enabled when first added.
  required: false
  type: boolean
encoding:
  default: utf-8
  description: The encoding of the payloads received and published messages. Set to
    `""` to disable decoding of incoming payload.
  required: false
  type: string
entity_category:
  description: The [category](https://developers.home-assistant.io/docs/core/entity#generic-properties)
    of the entity.
  required: false
  type: string
entity_picture:
  description: Picture URL for the entity.
  required: false
  type: string
icon:
  description: '[Icon](/docs/configuration/customizing-devices/#icon) for the entity.'
  required: false
  type: icon
json_attributes_template:
  description: Defines a [template](/docs/configuration/templating/#using-value-templates-with-mqtt)
    to extract the JSON dictionary from messages received on the `json_attributes_topic`.
    A usage example can be found in the [MQTT sensor](/integrations/sensor.mqtt/#json-attributes-template-configuration)
    documentation.
  required: false
  type: template
json_attributes_topic:
  description: The MQTT topic subscribed to receive a JSON dictionary payload and
    then set as sensor attributes. A usage example can be found in [MQTT sensor](/integrations/sensor.mqtt/#json-attributes-topic-configuration)
    documentation.
  required: false
  type: string
name:
  default: MQTT valve
  description: The name of the valve. Can be set to `null` if only the device name
    is relevant.
  required: false
  type: string
object_id:
  description: Used instead of `name` to have the `entity_id` generated automatically.
  required: false
  type: string
optimistic:
  default: '`false` if the state or position topic is defined; `true` otherwise.'
  description: Flag that defines if a switch works in optimistic mode.
  required: false
  type: boolean
payload_available:
  default: online
  description: The payload that represents the online state.
  required: false
  type: string
payload_close:
  default: CLOSE
  description: The command payload that closes the valve. Is only used when `reports_position`
    is set to `false` (default). The `payload_close` is not allowed if `reports_position`
    is set to `true`. Can be set to `null` to disable the valve's close option.
  required: false
  type: string
payload_not_available:
  default: offline
  description: The payload that represents the offline state.
  required: false
  type: string
payload_open:
  default: OPEN
  description: The command payload that opens the valve. Is only used when `reports_position`
    is set to `false` (default). The `payload_open` is not allowed if `reports_position`
    is set to `true`. Can be set to `null` to disable the valve's open option.
  required: false
  type: string
payload_stop:
  description: The command payload that stops the valve. When not configured, the
    valve will not support the `valve.stop` action.
  required: false
  type: string
platform:
  description: Must be `valve`. Only allowed and required in [MQTT auto discovery
    device messages](/integrations/mqtt/#device-discovery-payload).
  required: true
  type: string
position_closed:
  default: 0
  description: Number which represents closed position. The valve's position will
    be scaled to the(`position_closed`...`position_open`) range when an action is
    performed and scaled back when a value is received.
  required: false
  type: integer
position_open:
  default: 100
  description: Number which represents open position. The valve's position will be
    scaled to (`position_closed`...`position_open`) range when an is performed and
    scaled back when a value is received.
  required: false
  type: integer
qos:
  default: 0
  description: The maximum QoS level to be used when receiving and publishing messages.
  required: false
  type: integer
reports_position:
  default: false
  description: 'Set to `true` if the value reports the position or supports setting
    the position. Enabling the `reports_position` option will cause the position to
    be published instead of a payload defined by `payload_open`, `payload_close` or
    `payload_stop`. When receiving messages, `state_topic` will accept numeric payloads
    or one of the following state messages: `open`, `opening`, `closed`, or `closing`.'
  required: false
  type: boolean
retain:
  default: false
  description: Defines if published messages should have the retain flag set.
  required: false
  type: boolean
state_closed:
  default: closed
  description: The payload that represents the closed state. Is only allowed when
    `reports_position` is set to `False` (default).
  required: false
  type: string
state_closing:
  default: closing
  description: The payload that represents the closing state.
  required: false
  type: string
state_open:
  default: open
  description: The payload that represents the open state. Is only allowed when `reports_position`
    is set to `False` (default).
  required: false
  type: string
state_opening:
  default: opening
  description: The payload that represents the opening state.
  required: false
  type: string
state_topic:
  description: The MQTT topic subscribed to receive valve state messages. State topic
    accepts a state payload (`open`, `opening`, `closed`, or `closing`) or, if `reports_position`
    is supported, a numeric value representing the position. In a JSON format with
    variables `state` and `position` both values can received together. A "None" state
    value resets to an `unknown` state. An empty string is ignored.
  required: false
  type: string
unique_id:
  description: An ID that uniquely identifies this valve. If two valves have the same
    unique ID, Home Assistant will raise an exception. Required when used with device-based
    discovery.
  required: false
  type: string
value_template:
  description: Defines a [template](/docs/configuration/templating/#using-value-templates-with-mqtt)
    that can be used to extract the payload for the `state_topic` topic. The rendered
    value should be a defined state payload or, if reporting a `position` is supported
    and `reports_position` is set to `true`, a numeric value is expected representing
    the position. See also `state_topic`.
  required: false
  type: template
