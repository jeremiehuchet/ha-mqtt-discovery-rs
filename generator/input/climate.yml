action_template:
  description: A template to render the value received on the `action_topic` with.
  required: false
  type: template
action_topic:
  description: 'The MQTT topic to subscribe for changes of the current action. If
    this is set, the climate graph uses the value received as data source. A "None"
    payload resets the current action state. An empty payload is ignored. Valid action
    values: `off`, `heating`, `cooling`, `drying`, `idle`, `fan`.'
  required: false
  type: string
availability:
  description: A list of MQTT topics subscribed to receive availability (online/offline)
    updates. Must not be used together with `availability_topic`.
  keys:
    payload_available:
      default: online
      description: The payload that represents the available state.
      required: false
      type: string
    payload_not_available:
      default: offline
      description: The payload that represents the unavailable state.
      required: false
      type: string
    topic:
      description: An MQTT topic subscribed to receive availability (online/offline)
        updates.
      required: true
      type: string
    value_template:
      description: Defines a [template](/docs/configuration/templating/#using-value-templates-with-mqtt)
        to extract device's availability from the `topic`. To determine the devices's
        availability result of this template will be compared to `payload_available`
        and `payload_not_available`.
      required: false
      type: template
  required: false
  type: list
availability_mode:
  default: latest
  description: When `availability` is configured, this controls the conditions needed
    to set the entity to `available`. Valid entries are `all`, `any`, and `latest`.
    If set to `all`, `payload_available` must be received on all configured availability
    topics before the entity is marked as online. If set to `any`, `payload_available`
    must be received on at least one configured availability topic before the entity
    is marked as online. If set to `latest`, the last `payload_available` or `payload_not_available`
    received on any configured availability topic controls the availability.
  required: false
  type: string
availability_template:
  description: Defines a [template](/docs/configuration/templating/#using-value-templates-with-mqtt)
    to extract device's availability from the `availability_topic`. To determine the
    devices's availability result of this template will be compared to `payload_available`
    and `payload_not_available`.
  required: false
  type: template
availability_topic:
  description: The MQTT topic subscribed to receive availability (online/offline)
    updates. Must not be used together with `availability`.
  required: false
  type: string
current_humidity_template:
  description: A template with which the value received on `current_humidity_topic`
    will be rendered.
  required: false
  type: template
current_humidity_topic:
  description: The MQTT topic on which to listen for the current humidity. A `"None"`
    value received will reset the current humidity. Empty values (`'''`) will be ignored.
  required: false
  type: string
current_temperature_template:
  description: A template with which the value received on `current_temperature_topic`
    will be rendered.
  required: false
  type: template
current_temperature_topic:
  description: The MQTT topic on which to listen for the current temperature. A `"None"`
    value received will reset the current temperature. Empty values (`'''`) will be
    ignored.
  required: false
  type: string
device:
  description: Information about the device this HVAC device is a part of to tie it
    into the [device registry](https://developers.home-assistant.io/docs/en/device_registry_index.html).
    Only works when [`unique_id`](#unique_id) is set. At least one of identifiers
    or connections must be present to identify the device.
  keys:
    configuration_url:
      description: A link to the webpage that can manage the configuration of this
        device. Can be either an `http://`, `https://` or an internal `homeassistant://`
        URL.
      required: false
      type: string
    connections:
      description: 'A list of connections of the device to the outside world as a
        list of tuples `[connection_type, connection_identifier]`. For example the
        MAC address of a network interface: `"connections": [["mac", "02:5b:26:a8:dc:12"]]`.'
      required: false
      type: list
    hw_version:
      description: The hardware version of the device.
      required: false
      type: string
    identifiers:
      description: A list of IDs that uniquely identify the device. For example a
        serial number.
      required: false
      type:
      - list
      - string
    manufacturer:
      description: The manufacturer of the device.
      required: false
      type: string
    model:
      description: The model of the device.
      required: false
      type: string
    model_id:
      description: The model identifier of the device.
      required: false
      type: string
    name:
      description: The name of the device.
      required: false
      type: string
    serial_number:
      description: The serial number of the device.
      required: false
      type: string
    suggested_area:
      description: Suggest an area if the device isn’t in one yet.
      required: false
      type: string
    sw_version:
      description: The firmware version of the device.
      required: false
      type: string
    via_device:
      description: Identifier of a device that routes messages between this device
        and Home Assistant. Examples of such devices are hubs, or parent devices of
        a sub-device. This is used to show device topology in Home Assistant.
      required: false
      type: string
  required: false
  type: map
enabled_by_default:
  default: true
  description: Flag which defines if the entity should be enabled when first added.
  required: false
  type: boolean
encoding:
  default: utf-8
  description: The encoding of the payloads received and published messages. Set to
    `""` to disable decoding of incoming payload.
  required: false
  type: string
entity_category:
  description: The [category](https://developers.home-assistant.io/docs/core/entity#generic-properties)
    of the entity.
  required: false
  type: string
entity_picture:
  description: Picture URL for the entity.
  required: false
  type: string
fan_mode_command_template:
  description: A template to render the value sent to the `fan_mode_command_topic`
    with.
  required: false
  type: template
fan_mode_command_topic:
  description: The MQTT topic to publish commands to change the fan mode.
  required: false
  type: string
fan_mode_state_template:
  description: A template to render the value received on the `fan_mode_state_topic`
    with.
  required: false
  type: template
fan_mode_state_topic:
  description: The MQTT topic to subscribe for changes of the HVAC fan mode. If this
    is not set, the fan mode works in optimistic mode (see below). A "None" payload
    resets the fan mode state. An empty payload is ignored.
  required: false
  type: string
fan_modes:
  default:
  - auto
  - low
  - medium
  - high
  description: A list of supported fan modes.
  required: false
  type: list
icon:
  description: '[Icon](/docs/configuration/customizing-devices/#icon) for the entity.'
  required: false
  type: icon
initial:
  description: Set the initial target temperature. The default value depends on the
    temperature unit and will be 21° or 69.8°F.
  required: false
  type: float
json_attributes_template:
  description: Defines a [template](/docs/configuration/templating/#using-value-templates-with-mqtt)
    to extract the JSON dictionary from messages received on the `json_attributes_topic`.
    Usage example can be found in [MQTT sensor](/integrations/sensor.mqtt/#json-attributes-template-configuration)
    documentation.
  required: false
  type: template
json_attributes_topic:
  description: The MQTT topic subscribed to receive a JSON dictionary payload and
    then set as sensor attributes. Usage example can be found in [MQTT sensor](/integrations/sensor.mqtt/#json-attributes-topic-configuration)
    documentation.
  required: false
  type: string
max_humidity:
  default: 99
  description: The minimum target humidity percentage that can be set.
  required: false
  type: float
max_temp:
  description: Maximum set point available. The default value depends on the temperature
    unit, and will be 35°C or 95°F.
  required: false
  type: float
min_humidity:
  default: 30
  description: The maximum target humidity percentage that can be set.
  required: false
  type: float
min_temp:
  description: Minimum set point available. The default value depends on the temperature
    unit, and will be 7°C or 44.6°F.
  required: false
  type: float
mode_command_template:
  description: A template to render the value sent to the `mode_command_topic` with.
  required: false
  type: template
mode_command_topic:
  description: The MQTT topic to publish commands to change the HVAC operation mode.
  required: false
  type: string
mode_state_template:
  description: A template to render the value received on the `mode_state_topic` with.
  required: false
  type: template
mode_state_topic:
  description: The MQTT topic to subscribe for changes of the HVAC operation mode.
    If this is not set, the operation mode works in optimistic mode (see below). A
    "None" payload resets to an `unknown` state. An empty payload is ignored.
  required: false
  type: string
modes:
  default:
  - auto
  - 'off'
  - cool
  - heat
  - dry
  - fan_only
  description: A list of supported modes. Needs to be a subset of the default values.
  required: false
  type: list
name:
  default: MQTT HVAC
  description: The name of the HVAC. Can be set to `null` if only the device name
    is relevant.
  required: false
  type: string
object_id:
  description: Used instead of `name` for automatic generation of `entity_id`
  required: false
  type: string
optimistic:
  default: '`true` if no state topic defined, else `false`.'
  description: Flag that defines if the climate works in optimistic mode
  required: false
  type: boolean
payload_available:
  default: online
  description: The payload that represents the available state.
  required: false
  type: string
payload_not_available:
  default: offline
  description: The payload that represents the unavailable state.
  required: false
  type: string
payload_off:
  default: 'OFF'
  description: The payload sent to turn off the device.
  required: false
  type: string
payload_on:
  default: 'ON'
  description: The payload sent to turn the device on.
  required: false
  type: string
power_command_template:
  description: A template to render the value sent to the `power_command_topic` with.
    The `value` parameter is the payload set for `payload_on` or `payload_off`.
  required: false
  type: template
power_command_topic:
  description: The MQTT topic to publish commands to change the HVAC power state.
    Sends the payload configured with `payload_on` if the climate is turned on via
    the `climate.turn_on`, or the payload configured with `payload_off` if the climate
    is turned off via the `climate.turn_off` action. Note that `optimistic` mode is
    not supported through `climate.turn_on` and `climate.turn_off` actions. When called,
    these actions will send a power command to the device but will not optimistically
    update the state of the climate entity. The climate device should report its state
    back via `mode_state_topic`.
  required: false
  type: string
precision:
  default: 0.1 for Celsius and 1.0 for Fahrenheit.
  description: The desired precision for this device. Can be used to match your actual
    thermostat's precision. Supported values are `0.1`, `0.5` and `1.0`.
  required: false
  type: float
preset_mode_command_template:
  description: Defines a [template](/docs/configuration/templating/#using-command-templates-with-mqtt)
    to generate the payload to send to `preset_mode_command_topic`.
  required: false
  type: template
preset_mode_command_topic:
  description: The MQTT topic to publish commands to change the preset mode.
  required: false
  type: string
preset_mode_state_topic:
  description: The MQTT topic subscribed to receive climate speed based on presets.
    When preset 'none' is received or `None` the `preset_mode` will be reset.
  required: false
  type: string
preset_mode_value_template:
  description: Defines a [template](/docs/configuration/templating/#using-value-templates-with-mqtt)
    to extract the `preset_mode` value from the payload received on `preset_mode_state_topic`.
  required: false
  type: template
preset_modes:
  default: []
  description: List of preset modes this climate is supporting. Common examples include
    `eco`, `away`, `boost`, `comfort`, `home`, `sleep` and `activity`.
  required: false
  type:
  - list
qos:
  default: 0
  description: The maximum QoS level to be used when receiving and publishing messages.
  required: false
  type: integer
retain:
  default: false
  description: Defines if published messages should have the retain flag set.
  required: false
  type: boolean
swing_horizontal_mode_command_template:
  description: A template to render the value sent to the `swing_horizontal_mode_command_topic`
    with.
  required: false
  type: template
swing_horizontal_mode_command_topic:
  description: The MQTT topic to publish commands to change the swing horizontal mode.
  required: false
  type: string
swing_horizontal_mode_state_template:
  description: A template to render the value received on the `swing_horizontal_mode_state_topic`
    with.
  required: false
  type: template
swing_horizontal_mode_state_topic:
  description: The MQTT topic to subscribe for changes of the HVAC swing horizontal
    mode. If this is not set, the swing horizontal mode works in optimistic mode (see
    below).
  required: false
  type: string
swing_horizontal_modes:
  default:
  - 'on'
  - 'off'
  description: A list of supported swing horizontal modes.
  required: false
  type: list
swing_mode_command_template:
  description: A template to render the value sent to the `swing_mode_command_topic`
    with.
  required: false
  type: template
swing_mode_command_topic:
  description: The MQTT topic to publish commands to change the swing mode.
  required: false
  type: string
swing_mode_state_template:
  description: A template to render the value received on the `swing_mode_state_topic`
    with.
  required: false
  type: template
swing_mode_state_topic:
  description: The MQTT topic to subscribe for changes of the HVAC swing mode. If
    this is not set, the swing mode works in optimistic mode (see below).
  required: false
  type: string
swing_modes:
  default:
  - 'on'
  - 'off'
  description: A list of supported swing modes.
  required: false
  type: list
target_humidity_command_template:
  description: Defines a [template](/docs/configuration/templating/#using-command-templates-with-mqtt)
    to generate the payload to send to `target_humidity_command_topic`.
  required: false
  type: template
target_humidity_command_topic:
  description: The MQTT topic to publish commands to change the target humidity.
  required: false
  type: string
target_humidity_state_template:
  description: Defines a [template](/docs/configuration/templating/#using-value-templates-with-mqtt)
    to extract a value for the climate `target_humidity` state.
  required: false
  type: template
target_humidity_state_topic:
  description: The MQTT topic subscribed to receive the target humidity. If this is
    not set, the target humidity works in optimistic mode (see below). A `"None"`
    value received will reset the target humidity. Empty values (`'''`) will be ignored.
  required: false
  type: string
temp_step:
  default: 1
  description: Step size for temperature set point.
  required: false
  type: float
temperature_command_template:
  description: A template to render the value sent to the `temperature_command_topic`
    with.
  required: false
  type: template
temperature_command_topic:
  description: The MQTT topic to publish commands to change the target temperature.
  required: false
  type: string
temperature_high_command_template:
  description: A template to render the value sent to the `temperature_high_command_topic`
    with.
  required: false
  type: template
temperature_high_command_topic:
  description: The MQTT topic to publish commands to change the high target temperature.
  required: false
  type: string
temperature_high_state_template:
  description: A template to render the value received on the `temperature_high_state_topic`
    with. A `"None"` value received will reset the temperature high set point. Empty
    values (`'''`) will be ignored.
  required: false
  type: template
temperature_high_state_topic:
  description: The MQTT topic to subscribe for changes in the target high temperature.
    If this is not set, the target high temperature works in optimistic mode (see
    below).
  required: false
  type: string
temperature_low_command_template:
  description: A template to render the value sent to the `temperature_low_command_topic`
    with.
  required: false
  type: template
temperature_low_command_topic:
  description: The MQTT topic to publish commands to change the target low temperature.
  required: false
  type: string
temperature_low_state_template:
  description: A template to render the value received on the `temperature_low_state_topic`
    with. A `"None"` value received will reset the temperature low set point. Empty
    values (`'''`) will be ignored.
  required: false
  type: template
temperature_low_state_topic:
  description: The MQTT topic to subscribe for changes in the target low temperature.
    If this is not set, the target low temperature works in optimistic mode (see below).
  required: false
  type: string
temperature_state_template:
  description: A template to render the value received on the `temperature_state_topic`
    with.
  required: false
  type: template
temperature_state_topic:
  description: The MQTT topic to subscribe for changes in the target temperature.
    If this is not set, the target temperature works in optimistic mode (see below).
    A `"None"` value received will reset the temperature set point. Empty values (`'''`)
    will be ignored.
  required: false
  type: string
temperature_unit:
  description: Defines the temperature unit of the device, `C` or `F`. If this is
    not set, the temperature unit is set to the system temperature unit.
  required: false
  type: string
unique_id:
  description: An ID that uniquely identifies this HVAC device. If two HVAC devices
    have the same unique ID, Home Assistant will raise an exception. Required when
    used with device-based discovery.
  required: false
  type: string
value_template:
  description: Default template to render the payloads on *all* `*_state_topic`s with.
  required: false
  type: template
